class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size();
        if (!n) return 0;

        int ans = 1;
        dp_ = vector<int>(n, -1);
        for (int i = 0; i < n; i++) {
            ans = max(ans, helper(nums, i));
        }
        return ans;
    }
private:
    vector<int> dp_;

    int helper(vector<int>& nums, int r) {
        // terminate
        if (r == 0) return 1;
        if (dp_[r] != -1) return dp_[r]; 
        // process
        // drill down
        int ans = 1;
        for (int i = 0; i < r; i++) {
            if (nums[i] < nums[r]) {
                ans = max(ans, helper(nums, i) + 1);
            }            
        }
        return dp_[r] = ans;
        // reverse status
    }
};