```
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        
        int j = 0;
        for (int i = 0; i < nums.size(); i++) {
            if ( nums[i] != 0) {
                nums[j] = nums[i];
                if (i != j) {
                    nums[i] = 0;
                }
                j++;
            }
        }
    }
};

// 思路 + 时空复杂度：
// 1. 把 非0元素往前挪，后面补0
// 时间复杂度O(n) 
// 空间复杂度O(1)
// void moveZeroes(vector<int>& nums) {
//         int j  = 0;
//         // move all the nonzero elements advance 
//         for (int i =0; i < nums.size(); i++) {
//             if (nums[i] != 0) {
//                 nums[j++] = nums[i];
//             }
//         }
//         for (; j < nums.size(); j++) {
//             nums[j] = 0;
//         }
//     }
// 参考(国际站)：
// https://leetcode.com/problems/move-zeroes/discuss/72005/My-simple-C%2B%2B-solution

// 2. 思路+时空复杂度
// 思路：把非0的往前移动，要背诵记住做法(这个相对好一点)
// 时间复杂度：O(n)
// 空间复杂度：O(1)
// 参考资料:
// 极客大学第1周第3课 实战题目解析:移动0
    // void moveZeroes(vector<int>& nums) {
    //     int j = 0;
    //     for (int i = 0; i < nums.size(); i++) {
    //         if(nums[i] != 0) {
    //             nums[j] = nums[i];
    //             if( i != j) {
    //                 nums[i] = 0;
    //             }
    //             j++;
    //         }
    //     }
```
